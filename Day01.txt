1. 개인폴더 만들기 (C혹은 D드라이브)
형식 : JSP_010930_이름

2. 공유폴더 : \\192.168.2.101\JSP_010930_주말 ==> 바로가기 만들기
모든 파일 -> 개인폴더로 복사 

==============================================================
1. DBMS + Java 
2. HTML
3. JSP 기본개념
4. JSTL, EL 
5. 회원처리, 게시판 처리
6. MVC2 모델
==============================================================
1. 설치할 것 -> oracle 설치(DB)
==============================================================
< 새 계정 만들기 + 권한 부여 >

1. SYSTEM 계정 접속 (우리 계정 생성)
CONN / AS SYSDBA;

2. 새 계정 만들기 : CREATE USER [새id] IDENTIFIED BY [비밀번호];
CREATE USER jsp010930we IDENTIFIED BY jsppassword;

3. 새 계정에 DBA(디비admin) 계정 부여 : GRANT [권한] TO [id];
GRANT DBA TO jsp010930we; 
=================================================
< 새 계정으로 접속 + 실습 >
1. 계정 접속 : CONNECT [id]/[password];
CONN jsp010930we/jsppassword;

참고) SHOW USER; ==> 지금 접속중인 계정 보기

2. 테이블 만들기 : CREATE [테이블명] ( 
	항목이름 자료형 제약조건,
	항목이름 자료형 제약조건,
	.... 
);

CREATE TABLE student (
	num 	NUMBER,
	name 	VARCHAR2(20),
	tel 	VARCHAR2(16),
	score 	NUMBER,
	grade 	VARCHAR2(1),
	regdate 	DATE
);

** DB의 자료형 
 1. NUMBER : 정수 + 실수
 2. VARCHAR2(바이트 수) : 문자열
 3. DATE : 날짜

참고) 테이블 정보보기 : DESC [테이블명];

3. 레코드(데이터) 추가 : INSERT INTO [테이블명] VALUES( 값1, 값2, 값3, ... );

INSERT INTO student VALUES( 1, '김피카츄', '010-1111-1111', 88, 'B', SYSDATE );
INSERT INTO student VALUES( 2, '이푸린', '010-2222-2222', 98, 'A', SYSDATE );
INSERT INTO student VALUES( 3, '황꼬부기', '010-3333-3333', 88.5, 'B', SYSDATE );
INSERT INTO student VALUES( 4, '최치코리타', '010-4444-4444', 63.5, 'D', TO_DATE('2017/04/24', 'YYYY/MM/DD'));
INSERT INTO student(num, name, tel, regdate) VALUES(5, '김또도가스', '010-5555-5555', SYSDATE);

참고) 테이블의 모든 레코드 조회 : SELECT * FROM [테이블명];
SELECT * FROM student;

참고) SYSDATE : 지금 시간 (SYSTEM의 시간)
        TO_DATE('2018-05-03', 'YYYY-MM-DD') : 2018년 5월 3일

참고) 레코드 최종 저장 : COMMIT;
     종료 : EXIT;  (자동 COMMIT됨)

4. 데이터 조회 : SELECT [항목명] FROM [테이블명] (WHERE [조건절]);
SELECT * FROM student; 
 => 모든 학생들의 모든 항목(*)을 조회

SELECT num FROM student; 
 => 모든 학생들의 학번을 조회

SELECT num, name FROM student;
 => 모든 학생들의 학번, 이름 조회

SELECT * FROM student WHERE num = 5;
 => 학번이 5번인 학생의 모든 정보 조회 ( 같다 : = )

SELECT name, score FROM student WHERE score >= 80 AND score < 90;
 => 점수가 80이상 90미만인 학생들의 이름, 점수 조회  ( && : AND / || : OR ) 

SELECT name, num, grade FROM student WHERE grade = 'B';
 => 등급이 B등급인 학생들의 이름, 학번, 등급 조회

SELECT name, num, tel FROM student WHERE num >= 1 AND num <= 3;
 => 학번이 1, 2, 3번인 학생들의 이름, 학번, 연락처 조회 

SELECT * FROM student WHERE score < 70 AND num >= 4;
 => 점수가 70점 미만이고, 학번이 4번 이상인 학생의 모든 정보 조회

5. 데이터 수정 : UPDATE [테이블명] SET [무엇을] = [얼마로] (WHERE [조건절);

UPDATE student SET name = '메롱';
 => 모든 학생들의 이름을 '메롱'으로 수정

UPDATE student SET score = 70, grade = 'C' WHERE num = 5;
 => 학번이 5번인 학생의 점수를 70으로, 등급을 'C'로 수정

UPDATE student SET grade = 'B' WHERE score >= 80 AND score < 90;
 => 평균이 80점이상 90점 미만인 학생들의 학점을 'B'로 수정

UPDATE student SET score = 0 WHERE score IS NULL;
 => 점수가 없는 학생들의 점수를 0점으로 수정

UPDATE student SET score = 80 WHERE score = 0 AND name LIKE '김%';
 => 점수가 0점인 학생들 중 성이 김씨인 학생들의 점수를 80점으로 수정
   성이 김씨? ===> name LIKE '김%' 
                
UPDATE student SET name = '김라이츄', score = 100, grade = 'A' WHERE num = 1;
 => 학번이 1번인 학생의 이름을 '김라이츄'로, 점수를 100으로, 등급을 'A'로 변경

실행취소 : ROLLBACK; ( 마지막 COMMIT으로 돌아감 )
SELECT * FROM student;

6. 삭제 : DELETE FROM [테이블명] (WHERE 조건절); 

DELETE FROM student;
 => student의 모든 레코드 삭제 
    + ROLLBACK

DELETE FROM student WHERE TEL IS NULL;
 => 연락처가 NULL인 학생들 삭제 
    + ROLLBACK

DELETE FROM student WHERE tel LIKE '%5555';
 => 연락처가 '5555'로 끝나는 학생들 삭제 
    + ROLLBACK

DELETE FROM student WHERE name = '이푸린' OR num = 3; 
 => 이름이 이푸린이거나 번호가 3번인 학생을 삭제   
    + ROLLBACK
============================================================================
< 정렬 (SELECT할 때 사용) : ORDER BY [항목명] ASC/DESC >

모든 학생들의 모든 정보를 이름 오름차순으로 출력
SELECT * FROM student ORDER BY name ASC; 

모든 학생들의 모든 정보를 점수 내림차순(같은 점수면 이름 가나다순)으로 출력 
SELECT * FROM student ORDER BY score DESC, name ASC;

이름이 김씨인 학생들의 이름, 학번, 점수를 점수 내림차순으로 조회 
SELECT name, num, score FROM student WHERE name LIKE '김%' ORDER BY score DESC;

ASC : Ascending (오름차순)
DESC : Descending (내림차순)























