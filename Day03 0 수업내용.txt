< execute() 3대장 >
-> 주어진 쿼리(명령문)을 실행하는 메소드

1. boolean execute() : 일반 실행
 	return true : 이 명령의 결과가 결과집합(ResultSet)인 경우
	return false : 이 명령의 결과가 개수(int)인 경우

2. int executeUpdate() : 명령을 실행하고 변화된 행의 개수(int)가 리턴됨
	삭제명령(delete) ---> 삭제된 레코드의 개수
	추가명령(insert) ---> 추가된 레코드의 개수(1개씩만 저장되므로 최대 1)
	수정명령(update) ---> 수정된 레코드의 개수

3. ResultSet executeQuery() : 명령을 실행하고 반환된 결과집합(ResultSet)을 리턴함
	SELECT문에서 사용됨

** ResultSet이란?
쿼리 실행 후 결과를 담아오는 인터페이스 
사용방법 
 1. rs = ps.executeQuery() 실행
 2. rs.next() 
   rs 객체 안에는 '커서'가 있음. 맨 처음에 이 커서는 아무 것도 가리키고 있지 않다가
   next()가 호출되면 첫 째 레코드를 가리킴 (레코드가 있으면 true, 없으면 false)

 3. rs.getXXX( String 항목명 ) 을 실행 
         String, Int, Double, ... 
    ==> 현재 커서가 가리키는 레코드의 해당 항목값을 XXX형태로 return
 4. 이후 계속 rs.next()를 통해 모든 레코드를 조회함. 
==========================================================
< 학생 관리 프로그램 만들기 >
1. 테이블 만들기 
  (번호, 이름, 국, 영, 수, 평균, 학점, 등록일자)
2. 시퀀스 만들기

3. 자바프로젝트 만들기 : ch02_학생관리프로그램

4. 
 패키지 : com.student.main, com.student.util
	
 클래스 : Util -> getConnection(), close() 만들기
        Main 클래스 만들기
 
5. Main클래스 
 메뉴: 
	1. 학생 추가 ===> 이름, 국, 영, 수 입력 받고 평균, 학점 계산
			번호는 시퀀스가 자동 지정, 등록일자는 sysdate로
	2. 모든 학생 보기(성적순)
	3. 모든 학생 보기(번호순)
	4. 학생 검색 ===> 번호를 입력 받고 해당 학생의 모든 정보 출력
	5. 1등 학생 보기
	6. 학생 삭제 ===> 이름을 입력 받고 해당 이름을 가진 학생들의 이름, 번호 출력
			-> 번호를 입력 받아 특정 학생 1명만 삭제 
	0. 종료 
	

















